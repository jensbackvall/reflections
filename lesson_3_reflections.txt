When would you want to use a remote repository rather than keeping all your work local?

This could be useful for when you arecollaborating with others, who would want to access
the files from wherever they are. It could also serve as a backup, in case your machine
was is stolen, broken or in incapacitized in any way.


Why might you want to always pull changes manually rather than having Git automatically
stay up-to-date with your remote repository?

If you are collaborating with someone, it might not be a great idea to automatically pull
their work onto your machine. Rather, deciding when to pull after having talked things
through with your collaborators would probably be a wiser choice.


Describe the differences between forks, clones, and branches. When would you use one
 instead of another?

A clone is a copy of a repository, either from a remote location (like GitHub) or from
 your own computer. This can used to work on a new version of something without creating
  a branch, or just because you want a copy of it for some other reason.
A Branch is a new section of a repository that diverges from the master branch. This could
 be for trying out new features, changing the language etc.
A fork is basically a clone, but it only exists on GitHub and for you to work on the fork on
your own machine, you need to clone the fork that you have created on GitHub.


What is the benefit of having a copy of the last known state of the remote stored locally?

If you are collaborating with someone else, it is good to be able to check out your last 
known version of the remote, so that you can compare it to an online version updated by
someone else.


How would you collaborate without using Git or GitHub? What would be easier, and what
 would be harder?

This is a big question. Comparing changes that I myself and one or more collaborators have
made would possibly take a lot of time. We might have to mark each change manually and send
 files to each other with notations on which lines to check out for new changes. Seeing Git
 do this automatically makes using Git seem like a very wise choice.
If I did not use Git and GitHub, I wouldn't need all the "git add" and "git commit", but since
 this isn't really a big bother, using the litle extra time it takes (compared to just saving)
 seem like it is worth it.


When would you want to make changes in a separate branch rather than directly in master? What
 benefits does each approach have?

Working directly in master is simpler and faster, but makes it difficult or impossible to work 
alongside other people, if everyone keeps updating master, since this creates possible conflicts 
too often. Working on separate branches allows you to work on different aspects and different
functionality on parallel tracks that can later be merged if all changes are wanted on the master
branch.


